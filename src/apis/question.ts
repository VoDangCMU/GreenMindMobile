import BackendInstance from "./instances/BackendInstance";
import { storageKey } from "@/store/appStore";

// üé≠ M·ªôt template c·ª• th·ªÉ
export interface QuestionTemplate {
  template_id: string;      // ID m·∫´u c√¢u (VD: "T_RATING_01")
  sentence: string;         // C√¢u h·ªèi ho√†n ch·ªânh
  slot: string;             // Lo·∫°i slot ("ocean" ho·∫∑c "behavior")
  value_behavior: string[]; // C√°c gi√° tr·ªã m√¥ t·∫£ h√†nh vi
  value_slot: string[];     // C√°c gi√° tr·ªã m√¥ t·∫£ m·ª©c ƒë·ªô (VD: "T·ªët", "T·ªá", "Th·ªânh tho·∫£ng")
  ocean: string;            // Nh√≥m t√≠nh c√°ch (VD: "R", "F", "Y", "L")
}

// üî¢ Nh√≥m c√°c c√¢u h·ªèi theo lo·∫°i trong t·ª´ng OCEAN key
export interface OceanGroup {
  rating?: QuestionTemplate[];
  frequency?: QuestionTemplate[];
  yesno?: QuestionTemplate[];
  likert5?: QuestionTemplate[];
}

// üåä To√†n b·ªô c·∫•u tr√∫c ch√≠nh
export interface OceanTemplateData {
  R?: OceanGroup;
  F?: OceanGroup;
  Y?: OceanGroup;
  L?: OceanGroup;
}

function getToken() {
  return localStorage.getItem(storageKey) ? JSON.parse(localStorage.getItem(storageKey)!).access_token : null;
}

function authHeader(): Record<string, string> {
	const token = getToken();
	return token ? { Authorization: `Bearer ${token}` } : {};
}

export async function getQuestionTemplates() {
  const res = await BackendInstance.get("/questions/survey", { headers: authHeader() });
  return res.data.data;
}

export default {
  getQuestionTemplates,
};