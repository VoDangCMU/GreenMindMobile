name: Build and Release APK

on:
  push:
    branches:
      - master
      - main

jobs:
  build-web:
    name: Build Web Assets
    runs-on: ubuntu-latest
    outputs:
      dist-path: ${{ steps.upload.outputs.dist-path }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build web app
        run: bun run build

      - name: Upload web build artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist
          retention-days: 1

  sync-android:
    name: Sync Capacitor Android
    runs-on: ubuntu-latest
    needs: build-web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built web assets
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: dist

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Copy web build to Android
        run: bunx cap copy android

      - name: Sync Capacitor (update native plugins)
        run: bunx cap sync android

      - name: Upload synced Android project
        uses: actions/upload-artifact@v4
        with:
          name: android-project
          path: android
          retention-days: 1

  build-apk:
    name: Build & Release APK
    runs-on: ubuntu-latest
    needs: sync-android
    permissions:
      contents: write  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download synced Android project
        uses: actions/download-artifact@v4
        with:
          name: android-project
          path: android

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode keystore
        run: |
          echo "$KEYSTORE_FILE" | base64 --decode > android/app/release.keystore
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build signed APK
        working-directory: android
        run: |
          ./gradlew clean assembleRelease \
            -Pandroid.injected.signing.store.file=release.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
            -PapplicationId=${{ vars.APPLICATION_ID }}

      - name: Generate new tag
        id: tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          version="${latest_tag#v}"
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          new_patch=$((patch + 1))
          new_tag="v${major}.${minor}.${new_patch}"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          git tag $new_tag
          git push origin $new_tag

      - name: Upload APK to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: "Release ${{ steps.tag.outputs.new_tag }}"
          files: android/app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
